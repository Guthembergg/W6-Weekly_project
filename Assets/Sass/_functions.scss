@import "variables";

@function set-color($color) {
  @if (lightness($color) > 40) {
    @return #000;
  } @else {
    @return #fff;
  }
} //non posso usare questa funzione perchè lightness(), darken() e lighten() non funzionano su variabili css ma solo sui variaibli scss e per comunicare con js sto usando le variabili css. è possibile comunicare variabili scss a js ma serve un web pack che non ho voluto installare per tenere semplice il progetto.

// un altra cosa utile per cambiare il tema in dark o light mode è la media query @media (prefers-color-scheme: dark/light) ma dato che ho dato la possibilità di cambiare il colore a piacimento non o usato questa query

@mixin color-divs($count, $baseName, $startcolor) {
  $loop_color: $startcolor;

  @for $i from 0 through $count {
    .#{$baseName}-#{$i} {
      background-color: $loop_color;
      background-image: linear-gradient(rgba(0, 0, 0, calc($i / 22)) 0 0);

      h3,
      h4,
      h5,
      h6,
      small,
      button {
        filter: invert(100%);
        mix-blend-mode: difference;
      }
      h1,
      h2 {
        filter: invert(100%);
      }
    }
  }
} //funzione mixin che crea classi con il nome che vuoi con sfumature del colore iniziale e colore del testo invertito per risultare leggibile

@include color-divs(
  8,
  "color",
  $colorStart
); //creo 9 classi color-# per avere 8 sfumature da cui scegliere

$bodyColor: var(--Mycolor);

body {
  background-color: $bodyColor !important;
  background-image: linear-gradient(rgba(255, 255, 255, 0.09) 0 0);
  h2 {
    filter: invert(100%);
    mix-blend-mode: difference;
  }
}
* {
  transition: background-color 2s ease-in-out; //in questo modo c'è un cambioo graduale dei colori del sito quando l utente deciderà di cambiarli
}

.mr-2 {
  color: $colorStart;
  font-weight: 700;
}
h6 {
  color: $colorStart;
}
